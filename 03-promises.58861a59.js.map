{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAC9BC,EAAgBF,SAASC,cAAc,UAmB7C,SAASE,EAAcC,EAAUC,EAAOC,GAGtC,OADAF,EAAW,EACJ,IAAIG,SAAQ,KACjB,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,QAAQC,IAAIC,QACZF,QAAQC,IAAIP,GACZM,QAAQC,IAAIN,GACZ,IAAK,IAAIQ,EAAI,EAAGA,EAAID,OAAQC,GAAK,EAC/BH,QAAQC,IAAIE,GACZV,GAAY,EACZC,GAASC,EACTS,YACE,KAEE,GADAV,GAASC,EACLE,EACF,OAAOQ,EAAS,CAAEC,SAAAb,E,MAAUC,IAE9Ba,EAAQ,CAAED,SAAAb,E,MAAUC,GAAQ,GAG9BA,EACAC,E,IAQR,SAASU,GAAWC,SAAAE,EAAQd,MAAEA,IAC5BR,EAAAuB,OAAOC,QAAQ,uBAAqBF,QAAiBd,M,CAGvD,SAASa,GAAUD,SAAAK,EAAQjB,MAAEA,IAC3BR,EAAAuB,OAAOG,QAAQ,sBAAoBD,QAAejB,M,CArDpDM,QAAQa,IAAIzB,GAEZG,EAAcuB,iBAAiB,SAE/B,SAAkBC,GAChBA,EAAEC,iBACF,MAAMC,EAAkB7B,EAAK8B,SAAgB,MAC7CxB,MAAQyB,OAAOF,EAAgBG,OAE/B,MAAMC,EAAiBjC,EAAK8B,SAAe,KAC3CvB,KAAOwB,OAAOE,EAAeD,OAE7B,MAAME,EAAmBlC,EAAK8B,SAAiB,OAC/ChB,OAASiB,OAAOG,EAAiBF,OAEjC5B,EAZE+B,UAYsB7B,MAAOC,K,IA+BjCH,IAAgBgC,KAAKnB,GAAUoB,MAAMlB","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\nconst btnCreateProm = document.querySelector('button');\nconsole.dir(form);\n\nbtnCreateProm.addEventListener('click', onSubmit);\nlet position;\nfunction onSubmit(e) {\n  e.preventDefault();\n  const inputDelayValue = form.elements['delay'];\n  delay = Number(inputDelayValue.value);\n\n  const inputStepValue = form.elements['step'];\n  step = Number(inputStepValue.value);\n  // console.log(step);\n  const inputAmountValue = form.elements['amount'];\n  amount = Number(inputAmountValue.value);\n  // console.log(amount);\n  createPromise(position, delay, step);\n}\n\nfunction createPromise(position, delay, step) {\n  // delay = delay;\n  position = 0;\n  return new Promise(() => {\n    const shouldResolve = Math.random() > 0.3;\n    console.log(amount);\n    console.log(delay);\n    console.log(step);\n    for (let i = 0; i < amount; i += 1) {\n      console.log(i);\n      position += 1;\n      delay += step;\n      setTimeout(\n        () => {\n          delay += step;\n          if (shouldResolve) {\n            return onSucces({ position, delay });\n          }\n          onError({ position, delay });\n          // reject(`❌ Rejected promise ${position} in ${delay}ms`);\n        },\n        delay,\n        step\n      );\n    }\n  });\n}\n\ncreatePromise().then(onSucces).catch(onError);\n\nfunction onSucces({ position, delay }) {\n  Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n}\n\nfunction onError({ position, delay }) {\n  Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$btnCreateProm","$47d4ff9957288465$var$createPromise","position1","delay","step","Promise","shouldResolve","Math","random","console","log","amount","i","setTimeout","$47d4ff9957288465$var$onSucces","position","$47d4ff9957288465$var$onError","position2","Notify","success","position3","failure","dir","addEventListener","e","preventDefault","inputDelayValue","elements","Number","value","inputStepValue","inputAmountValue","$47d4ff9957288465$var$position","then","catch"],"version":3,"file":"03-promises.58861a59.js.map"}